#!/usr/bin/env python3
import sys
import subprocess
import threading
import time
import os

os.chdir("../micropython/opencom") # prepatch

MPOC_BIOS = "../../mpoc-rom/bios.py"

if not os.environ.get("CROSS_COMPILE"):
    if subprocess.call(["ccache", "-V"], stdout=subprocess.PIPE) == 0:
        os.environ["CROSS_COMPILE"] = "ccache "

if os.system("make") == 0:
    cmdline = ["./micropython"]
    if len(sys.argv) == 1:
        cmdline += [MPOC_BIOS]
        code = None
    elif len(sys.argv) >= 2:
        if sys.argv[1] == "build!":
            sys.exit(0)
        
        cmdline += sys.argv[1:]
    else:
        exit("usage: ./r [file] [args ...]")
    
    proc = subprocess.Popen(cmdline,
        stdin=subprocess.PIPE,
    )
    
    if code is None:
        def kill():
            try:
                proc.kill()
            except Exception:
                pass

        # threading.Timer(1, kill).start()
    
    try:
        if code:
            proc.stdin.write(code.encode())
        proc.stdin.close()
        
        exitcode = proc.wait()
        if exitcode == -11:
            print("Segmentation fault")
        elif exitcode < 0:
            print("Exit Code:", exitcode)
            
        exit(exitcode)
    except KeyboardInterrupt:
        proc.kill()
